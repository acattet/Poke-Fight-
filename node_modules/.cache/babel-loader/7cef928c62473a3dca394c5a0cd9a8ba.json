{"ast":null,"code":"var _jsxFileName = \"/Users/anthonycattet/Desktop/projects/testingGround/src/components/Battle/Battle.js\",\n    _s = $RefreshSig$();\n\nimport styles from './styles.module.css';\nimport { useEffect, useState } from 'react';\nimport { useAIOpponent, useBattleSequence } from 'hooks';\nimport { opponentStats, playerStats, wait } from 'shared';\nimport { BattleMenu, PlayerSummary, BattleAnnouncer } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Battle = ({\n  onGameEnd,\n  pokemon\n}) => {\n  _s();\n\n  const [sequence, setSequence] = useState({});\n  const {\n    turn,\n    inSequence,\n    playerHealth,\n    opponentHealth,\n    playerAnimation,\n    opponentAnimation,\n    announcerMessage\n  } = useBattleSequence(sequence);\n  const aiChoice = useAIOpponent(turn);\n  useEffect(() => {\n    if (aiChoice && turn === 1 && !inSequence) {\n      setSequence({\n        turn,\n        mode: aiChoice\n      });\n    }\n  }, [turn, aiChoice, inSequence]);\n  useEffect(() => {\n    if (playerHealth === 0 || opponentHealth === 0) {\n      (async () => {\n        await wait(1000);\n        onGameEnd(playerHealth === 0 ? opponentStats : playerStats);\n      })();\n    }\n  }, [playerHealth, opponentHealth, onGameEnd]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.opponent,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.summary,\n        children: /*#__PURE__*/_jsxDEV(PlayerSummary, {\n          main: false,\n          health: opponentHealth,\n          name: opponentStats.name,\n          level: opponentStats.level,\n          maxHealth: opponentStats.maxHealth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.characters,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gameHeader,\n        children: [playerStats.name, \" vs \", opponentStats.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gameImages,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.playerSprite,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: playerStats.name,\n            src: playerStats.img,\n            className: styles[playerAnimation]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.opponentSprite,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: opponentStats.name,\n            src: opponentStats.img,\n            className: styles[opponentAnimation]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.user,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.summary,\n        children: /*#__PURE__*/_jsxDEV(PlayerSummary, {\n          main: true,\n          health: playerHealth,\n          name: playerStats.name,\n          level: playerStats.level,\n          maxHealth: playerStats.maxHealth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.hud,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.hudChild,\n          children: /*#__PURE__*/_jsxDEV(BattleAnnouncer, {\n            message: announcerMessage || `What will ${playerStats.name} do?`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), !inSequence && turn === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.hudChild,\n          children: /*#__PURE__*/_jsxDEV(BattleMenu, {\n            onHeal: () => setSequence({\n              mode: 'heal',\n              turn\n            }),\n            onMagic: () => setSequence({\n              mode: 'magic',\n              turn\n            }),\n            onAttack: () => setSequence({\n              mode: 'attack',\n              turn\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Battle, \"tSD/nSvIf7yBF7d1Yp5FTBVZfgU=\", false, function () {\n  return [useBattleSequence, useAIOpponent];\n});\n\n_c = Battle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Battle\");","map":{"version":3,"sources":["/Users/anthonycattet/Desktop/projects/testingGround/src/components/Battle/Battle.js"],"names":["styles","useEffect","useState","useAIOpponent","useBattleSequence","opponentStats","playerStats","wait","BattleMenu","PlayerSummary","BattleAnnouncer","Battle","onGameEnd","pokemon","sequence","setSequence","turn","inSequence","playerHealth","opponentHealth","playerAnimation","opponentAnimation","announcerMessage","aiChoice","mode","opponent","summary","name","level","maxHealth","characters","gameHeader","gameImages","playerSprite","img","opponentSprite","user","hud","hudChild"],"mappings":"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","sourcesContent":["import styles from './styles.module.css';\nimport { useEffect, useState } from 'react';\nimport { useAIOpponent, useBattleSequence } from 'hooks';\nimport { opponentStats, playerStats, wait } from 'shared';\nimport { BattleMenu, PlayerSummary, BattleAnnouncer } from 'components';\n\nexport const Battle = ({ onGameEnd, pokemon }) => {\n  const [sequence, setSequence] = useState({});\n\n  const {\n    turn,\n    inSequence,\n    playerHealth,\n    opponentHealth,\n    playerAnimation,\n    opponentAnimation,\n    announcerMessage,\n  } = useBattleSequence(sequence);\n\n  const aiChoice = useAIOpponent(turn);\n\n  useEffect(() => {\n    if (aiChoice && turn === 1 && !inSequence) {\n      setSequence({ turn, mode: aiChoice });\n    }\n  }, [turn, aiChoice, inSequence]);\n\n  useEffect(() => {\n    if (playerHealth === 0 || opponentHealth === 0) {\n      (async () => {\n        await wait(1000);\n        onGameEnd(playerHealth === 0 ? opponentStats : playerStats);\n      })();\n    }\n  }, [playerHealth, opponentHealth, onGameEnd]);\n\n  return (\n    <>\n      <div className={styles.opponent}>\n        <div className={styles.summary}>\n          <PlayerSummary\n            main={false}\n            health={opponentHealth}\n            name={opponentStats.name}\n            level={opponentStats.level}\n            maxHealth={opponentStats.maxHealth}\n          />\n        </div>\n      </div>\n\n      <div className={styles.characters}>\n        <div className={styles.gameHeader}>\n          {playerStats.name} vs {opponentStats.name}\n        </div>\n        <div className={styles.gameImages}>\n          <div className={styles.playerSprite}>\n            <img\n              alt={playerStats.name}\n              src={playerStats.img}\n              className={styles[playerAnimation]}\n            />\n          </div>\n          <div className={styles.opponentSprite}>\n            <img\n              alt={opponentStats.name}\n              src={opponentStats.img}\n              className={styles[opponentAnimation]}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.user}>\n        <div className={styles.summary}>\n          <PlayerSummary\n            main={true}\n            health={playerHealth}\n            name={playerStats.name}\n            level={playerStats.level}\n            maxHealth={playerStats.maxHealth}\n          />\n        </div>\n\n        <div className={styles.hud}>\n          <div className={styles.hudChild}>\n            <BattleAnnouncer\n              message={\n                announcerMessage || `What will ${playerStats.name} do?`\n              }\n            />\n          </div>\n          {!inSequence && turn === 0 && (\n            <div className={styles.hudChild}>\n              <BattleMenu\n                onHeal={() => setSequence({ mode: 'heal', turn })}\n                onMagic={() => setSequence({ mode: 'magic', turn })}\n                onAttack={() => setSequence({ mode: 'attack', turn })}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}