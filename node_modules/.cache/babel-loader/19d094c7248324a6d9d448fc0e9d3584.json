{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { wait } from 'shared';\nimport { useEffect, useState } from 'react';\nexport const useTypedMessage = message => {\n  _s();\n\n  const [typedMessage, setTypedMessage] = useState('');\n  useEffect(() => {\n    setTypedMessage('');\n\n    if (message.length) {\n      (async () => {\n        let visibleMessage = '';\n\n        for (let i = 0; i < message.length; i++) {\n          await wait(25);\n          visibleMessage = visibleMessage + message[i];\n          setTypedMessage(visibleMessage);\n        }\n      })();\n    }\n  }, [message]);\n  return typedMessage;\n};\n\n_s(useTypedMessage, \"z7ea9CRWMrLpqvJvN0ypl135cf4=\");","map":{"version":3,"sources":["/Users/austinfb/Documents/Coding/projects/Poke-Fight-/src/hooks/useTypedMessage.js"],"names":["wait","useEffect","useState","useTypedMessage","message","typedMessage","setTypedMessage","length","visibleMessage","i"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,eAAe,GAAGC,OAAO,IAAI;AAAA;;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,eAAe,CAAC,EAAD,CAAf;;AAEA,QAAIF,OAAO,CAACG,MAAZ,EAAoB;AAClB,OAAC,YAAY;AACX,YAAIC,cAAc,GAAG,EAArB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACG,MAA5B,EAAoCE,CAAC,EAArC,EAAyC;AACvC,gBAAMT,IAAI,CAAC,EAAD,CAAV;AAEAQ,UAAAA,cAAc,GAAGA,cAAc,GAAGJ,OAAO,CAACK,CAAD,CAAzC;AAEAH,UAAAA,eAAe,CAACE,cAAD,CAAf;AACD;AACF,OATD;AAUD;AACF,GAfQ,EAeN,CAACJ,OAAD,CAfM,CAAT;AAiBA,SAAOC,YAAP;AACD,CArBM;;GAAMF,e","sourcesContent":["import { wait } from 'shared';\nimport { useEffect, useState } from 'react';\n\nexport const useTypedMessage = message => {\n  const [typedMessage, setTypedMessage] = useState('');\n\n  useEffect(() => {\n    setTypedMessage('');\n\n    if (message.length) {\n      (async () => {\n        let visibleMessage = '';\n        for (let i = 0; i < message.length; i++) {\n          await wait(25);\n\n          visibleMessage = visibleMessage + message[i];\n\n          setTypedMessage(visibleMessage);\n        }\n      })();\n    }\n  }, [message]);\n\n  return typedMessage;\n};\n"]},"metadata":{},"sourceType":"module"}